{
  "address": "0x7E3A5F8473b78F3425f0d9aBa0D9cDc69517bCCD",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        }
      ],
      "name": "ExpiredPrice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint112",
          "name": "price",
          "type": "uint112"
        }
      ],
      "name": "Price",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousPriceMantissa",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestedPriceMantissa",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPriceMantissa",
          "type": "uint256"
        }
      ],
      "name": "PricePosted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "WEVMOS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aggregatedOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        }
      ],
      "name": "getUnderlyingPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "setDirectPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "aggregated",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "usdPeggedAggregated",
          "type": "address"
        }
      ],
      "name": "setOracleAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "setUnderlyingPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wevmos",
          "type": "address"
        }
      ],
      "name": "setWEVMOSAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdPeggedAggregatedOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x0e191cb53038225a6aa25f9474645c81f52d624319bd1750839c389892106f53",
  "receipt": {
    "to": null,
    "from": "0x70b5d93d519C52a00839fEd5f87947D4Bc82ef6d",
    "contractAddress": "0x7E3A5F8473b78F3425f0d9aBa0D9cDc69517bCCD",
    "transactionIndex": 31,
    "gasUsed": "824782",
    "logsBloom": "0x
    "blockHash": "0xf92d7f63ece395032ace40fd60e37530a61c9d4dacc47241953e62b13a5fcb94",
    "transactionHash": "0x0e191cb53038225a6aa25f9474645c81f52d624319bd1750839c389892106f53",
    "logs": [
      {
        "transactionIndex": 31,
        "blockNumber": 9082184,
        "transactionHash": "0x0e191cb53038225a6aa25f9474645c81f52d624319bd1750839c389892106f53",
        "address": "0x7E3A5F8473b78F3425f0d9aBa0D9cDc69517bCCD",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000070b5d93d519c52a00839fed5f87947d4bc82ef6d"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0xf92d7f63ece395032ace40fd60e37530a61c9d4dacc47241953e62b13a5fcb94"
      }
    ],
    "blockNumber": 9082184,
    "cumulativeGasUsed": "4693215",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "fc9ff8734c912eb95870d5a0cfb4a99c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"ExpiredPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"price\",\"type\":\"uint112\"}],\"name\":\"Price\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousPriceMantissa\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestedPriceMantissa\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPriceMantissa\",\"type\":\"uint256\"}],\"name\":\"PricePosted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WEVMOS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aggregatedOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"}],\"name\":\"getUnderlyingPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setDirectPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregated\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"usdPeggedAggregated\",\"type\":\"address\"}],\"name\":\"setOracleAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setUnderlyingPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wevmos\",\"type\":\"address\"}],\"name\":\"setWEVMOSAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdPeggedAggregatedOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getUnderlyingPrice(address)\":{\"params\":{\"cToken\":\"The cToken to get the underlying price of\"},\"returns\":{\"_0\":\"The price of the asset in USD as an unsigned integer scaled up by 10 ^ (36 - underlying asset decimals). E.g. WBTC has 8 decimal places, so the return value is scaled up by 1e28.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setDirectPrice(address,uint256)\":{\"params\":{\"asset\":\"The address of the asset\",\"price\":\"The price to set the asset to: If WEVMOS, set the price with 6 decimals, otherwise use 18 decimals but denominate the price in WEVMOS\"}},\"setUnderlyingPrice(address,uint256)\":{\"params\":{\"cToken\":\"The address of the cToken\",\"price\":\"The price to set the asset to: If WEVMOS, set the price with 6 decimals, otherwise use 18 decimals but denominate the price in WEVMOS\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getUnderlyingPrice(address)\":{\"notice\":\"Get the underlying price of a cToken asset\"},\"setDirectPrice(address,uint256)\":{\"notice\":\"set the price of an asset\"},\"setUnderlyingPrice(address,uint256)\":{\"notice\":\"set the price of the underlying asset of the ctoken\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceOracle/AdrastiaPriceOracle.sol\":\"AdrastiaPriceOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/PriceOracle/AdrastiaPriceOracle.sol\":{\"content\":\"pragma solidity ^0.8.0;\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/IERC20.sol\\\";\\n\\ninterface IPriceOracle {\\n    function consultPrice(address token, uint256 maxAge)\\n        external\\n        view\\n        returns (uint112 price);\\n}\\n\\ninterface ICErc20 {\\n    function underlying() external view returns (address);\\n}\\n\\ncontract AdrastiaPriceOracle is Ownable {\\n    mapping(address => uint256) backupPrices;\\n    event PricePosted(\\n        address asset,\\n        uint256 previousPriceMantissa,\\n        uint256 requestedPriceMantissa,\\n        uint256 newPriceMantissa\\n    );\\n    event ExpiredPrice(address asset, address oracle);\\n    event Price(uint112 price);\\n\\n    address public aggregatedOracle =\\n        0x51d3d22965Bb2CB2749f896B82756eBaD7812b6d;\\n    address public usdPeggedAggregatedOracle =\\n        0xd850F64Eda6a62d625209711510f43cD49Ef8798;\\n    address public WEVMOS = 0xD4949664cD82660AaE99bEdc034a0deA8A0bd517;\\n\\n    function setWEVMOSAddress(address wevmos) public onlyOwner {\\n        WEVMOS = wevmos;\\n    }\\n\\n    function setOracleAddress(address aggregated, address usdPeggedAggregated)\\n        public\\n        onlyOwner\\n    {\\n        require(aggregated != address(0), \\\"Aggregated addr not set\\\");\\n        require(\\n            usdPeggedAggregated != address(0),\\n            \\\"usdPeggedAggregated addr not set\\\"\\n        );\\n        aggregatedOracle = aggregated;\\n        usdPeggedAggregatedOracle = usdPeggedAggregated;\\n    }\\n\\n    /**\\n     * @notice Get the underlying price of a cToken asset\\n     * @param cToken The cToken to get the underlying price of\\n     * @return The price of the asset in USD as an unsigned integer scaled up by\\n     * 10 ^ (36 - underlying asset decimals). E.g. WBTC has 8 decimal places, so the return value is scaled up by 1e28.\\n     */\\n    function getUnderlyingPrice(address cToken) public view returns (uint256) {\\n        address underlyingAsset = ICErc20(address(cToken)).underlying();\\n        uint256 evmosPrice; //Should be 10**6 * evmos price. ie 1 dollar = 1e6\\n        uint256 assetPrice; //Should be 10**18 * asset price. ie 1 dollar = 1e18\\n        // Gets the price of `token` with the requirement that the price is 2 hours old or less\\n        try\\n            IPriceOracle(usdPeggedAggregatedOracle).consultPrice(\\n                underlyingAsset,\\n                2 hours\\n            )\\n        returns (uint112 adrastiaPrice) {\\n            evmosPrice = uint256(adrastiaPrice);\\n        } catch (bytes memory) {\\n            evmosPrice = backupPrices[WEVMOS];\\n        }\\n        // USD Pegged Aggregated Oracle is denominated with 6 decimals\\n        if (underlyingAsset == WEVMOS) {\\n            return (evmosPrice *\\n                10**(36 - IERC20(underlyingAsset).decimals() - 6));\\n        }\\n        try\\n            IPriceOracle(aggregatedOracle).consultPrice(\\n                underlyingAsset,\\n                2 hours\\n            )\\n        returns (uint112 adrastiaPrice) {\\n            assetPrice = uint256(adrastiaPrice);\\n        } catch (bytes memory) {\\n            assetPrice =\\n                ((backupPrices[underlyingAsset] * evmosPrice) *\\n                    10**(36 - IERC20(underlyingAsset).decimals())) /\\n                10**(18 + 6);\\n        }\\n        return assetPrice;\\n    }\\n\\n    /**\\n     * @notice set the price of an asset\\n     * @param asset The address of the asset\\n     * @param price The price to set the asset to:\\n     * If WEVMOS, set the price with 6 decimals, otherwise use 18 decimals but denominate the price in WEVMOS\\n     */\\n    function setDirectPrice(address asset, uint256 price) public onlyOwner {\\n        emit PricePosted(asset, backupPrices[asset], price, price);\\n        backupPrices[asset] = price;\\n    }\\n\\n    /**\\n     * @notice set the price of the underlying asset of the ctoken\\n     * @param cToken The address of the cToken\\n     * @param price The price to set the asset to:\\n     * If WEVMOS, set the price with 6 decimals, otherwise use 18 decimals but denominate the price in WEVMOS\\n     */\\n    function setUnderlyingPrice(address cToken, uint256 price)\\n        public\\n        onlyOwner\\n    {\\n        address asset = ICErc20(address(cToken)).underlying();\\n        emit PricePosted(asset, backupPrices[asset], price, price);\\n        backupPrices[asset] = price;\\n    }\\n}\\n\",\"keccak256\":\"0xc7589d61600709b42aed9cdb112b0765599fdb65449f7be733fad26710a6a20b\"},\"contracts/PriceOracle/interfaces/IERC20.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC 20 Token Standard Interface\\n *  https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface IERC20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    /**\\n     * @notice Get the total number of tokens in circulation\\n     * @return The supply of tokens\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @notice Gets the balance of the specified address\\n     * @param owner The address from which the balance will be retrieved\\n     * @return balance\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @notice Transfer `amount` tokens from `msg.sender` to `dst`\\n     * @param dst The address of the destination account\\n     * @param amount The number of tokens to transfer\\n     * @return success Whether or not the transfer succeeded\\n     */\\n    function transfer(address dst, uint256 amount)\\n        external\\n        returns (bool success);\\n\\n    /**\\n     * @notice Transfer `amount` tokens from `src` to `dst`\\n     * @param src The address of the source account\\n     * @param dst The address of the destination account\\n     * @param amount The number of tokens to transfer\\n     * @return success Whether or not the transfer succeeded\\n     */\\n    function transferFrom(\\n        address src,\\n        address dst,\\n        uint256 amount\\n    ) external returns (bool success);\\n\\n    /**\\n     * @notice Approve `spender` to transfer up to `amount` from `src`\\n     * @dev This will overwrite the approval amount for `spender`\\n     *  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\\n     * @param spender The address of the account which may transfer tokens\\n     * @param amount The number of tokens that are approved (-1 means infinite)\\n     * @return success Whether or not the approval succeeded\\n     */\\n    function approve(address spender, uint256 amount)\\n        external\\n        returns (bool success);\\n\\n    /**\\n     * @notice Get the current allowance from `owner` for `spender`\\n     * @param owner The address of the account which owns the tokens to be spent\\n     * @param spender The address of the account which may transfer tokens\\n     * @return remaining The number of tokens allowed to be spent (-1 means infinite)\\n     */\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256 remaining);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 amount\\n    );\\n}\\n\",\"keccak256\":\"0x9838a12b42da31f3e4486c946119e6c8e0c618f34bd208709f35002cb5c96db2\"}},\"version\":1}",
  "bytecode": "0x6080604052600280546001600160a01b03199081167351d3d22965bb2cb2749f896b82756ebad7812b6d1790915560038054821673d850f64eda6a62d625209711510f43cd49ef87981790556004805490911673d4949664cd82660aae99bedc034a0dea8a0bd51717905534801561007657600080fd5b5061008761008261008c565b610090565b6100e0565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610c44806100ef6000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c806309a8acb01461009e578063127ffda0146100b357806346093b0e146100c657806357d6df05146100d9578063715018a6146100ec5780637cf5b4fc146100f45780638da5cb5b14610112578063af3721461461011a578063bb75f12d14610122578063f2fde38b1461012a578063fc57d4df1461013d575b600080fd5b6100b16100ac36600461089a565b61015d565b005b6100b16100c136600461089a565b6101c6565b6100b16100d4366004610862565b6102a3565b6100b16100e7366004610823565b61032e565b6100b1610358565b6100fc61036c565b604051610109919061090d565b60405180910390f35b6100fc61037b565b6100fc61038a565b6100fc610399565b6100b1610138366004610823565b6103a8565b61015061014b366004610823565b6103e2565b6040516101099190610a41565b610165610790565b6001600160a01b03821660009081526001602052604090819020549051600080516020610bef833981519152916101a2918591908590819061093a565b60405180910390a16001600160a01b03909116600090815260016020526040902055565b6101ce610790565b6000826001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561020957600080fd5b505afa15801561021d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102419190610846565b6001600160a01b03811660009081526001602052604090819020549051919250600080516020610bef833981519152916102809184918690819061093a565b60405180910390a16001600160a01b031660009081526001602052604090205550565b6102ab610790565b6001600160a01b0382166102da5760405162461bcd60e51b81526004016102d190610a10565b60405180910390fd5b6001600160a01b0381166103005760405162461bcd60e51b81526004016102d1906109a6565b600280546001600160a01b039384166001600160a01b03199182161790915560038054929093169116179055565b610336610790565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b610360610790565b61036a60006107cf565b565b6004546001600160a01b031681565b6000546001600160a01b031690565b6003546001600160a01b031681565b6002546001600160a01b031681565b6103b0610790565b6001600160a01b0381166103d65760405162461bcd60e51b81526004016102d190610960565b6103df816107cf565b50565b600080826001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561041e57600080fd5b505afa158015610432573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104569190610846565b6003546040516315d8472b60e21b815291925060009182916001600160a01b0316906357611cac90610490908690611c2090600401610921565b60206040518083038186803b1580156104a857600080fd5b505afa9250505080156104d8575060408051601f3d908101601f191682019092526104d5918101906108c5565b60015b61052f573d808015610506576040519150601f19603f3d011682016040523d82523d6000602084013e61050b565b606091505b50506004546001600160a01b0316600090815260016020526040902054915061053b565b6001600160701b031691505b6004546001600160a01b03848116911614156105f8576006836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561058c57600080fd5b505afa1580156105a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c491906108ec565b6105cf906024610ba0565b6105d99190610ba0565b6105e490600a610ab0565b6105ee9083610b81565b935050505061078b565b6002546040516315d8472b60e21b81526001600160a01b03909116906357611cac9061062c908690611c2090600401610921565b60206040518083038186803b15801561064457600080fd5b505afa925050508015610674575060408051601f3d908101601f19168201909252610671918101906108c5565b60015b61077a573d8080156106a2576040519150601f19603f3d011682016040523d82523d6000602084013e6106a7565b606091505b5069d3c21bcecceda1000000846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156106ec57600080fd5b505afa158015610700573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072491906108ec565b61072f906024610ba0565b61073a90600a610ab0565b6001600160a01b03861660009081526001602052604090205461075e908690610b81565b6107689190610b81565b6107729190610a4a565b915050610786565b6001600160701b031690505b925050505b919050565b61079861081f565b6001600160a01b03166107a961037b565b6001600160a01b03161461036a5760405162461bcd60e51b81526004016102d1906109db565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b3390565b600060208284031215610834578081fd5b813561083f81610bd9565b9392505050565b600060208284031215610857578081fd5b815161083f81610bd9565b60008060408385031215610874578081fd5b823561087f81610bd9565b9150602083013561088f81610bd9565b809150509250929050565b600080604083850312156108ac578182fd5b82356108b781610bd9565b946020939093013593505050565b6000602082840312156108d6578081fd5b81516001600160701b038116811461083f578182fd5b6000602082840312156108fd578081fd5b815160ff8116811461083f578182fd5b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0394909416845260208401929092526040830152606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f757364506567676564416767726567617465642061646472206e6f7420736574604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601790820152761059d9dc9959d85d1959081859191c881b9bdd081cd95d604a1b604082015260600190565b90815260200190565b600082610a6557634e487b7160e01b81526012600452602481fd5b500490565b80825b6001808611610a7c5750610aa7565b818704821115610a8e57610a8e610bc3565b80861615610a9b57918102915b9490941c938002610a6d565b94509492505050565b600061083f60001960ff851684600082610acc5750600161083f565b81610ad95750600061083f565b8160018114610aef5760028114610af957610b26565b600191505061083f565b60ff841115610b0a57610b0a610bc3565b6001841b915084821115610b2057610b20610bc3565b5061083f565b5060208310610133831016604e8410600b8410161715610b59575081810a83811115610b5457610b54610bc3565b61083f565b610b668484846001610a6a565b808604821115610b7857610b78610bc3565b02949350505050565b6000816000190483118215151615610b9b57610b9b610bc3565b500290565b600060ff821660ff841680821015610bba57610bba610bc3565b90039392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146103df57600080fdfedd71a1d19fcba687442a1d5c58578f1e409af71a79d10fd95a4d66efd8fa9ae7a26469706673582212200432ec4b596e5474066f4a6dbc8312aa9bef483d69a574822c4e30b8424a844964736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100995760003560e01c806309a8acb01461009e578063127ffda0146100b357806346093b0e146100c657806357d6df05146100d9578063715018a6146100ec5780637cf5b4fc146100f45780638da5cb5b14610112578063af3721461461011a578063bb75f12d14610122578063f2fde38b1461012a578063fc57d4df1461013d575b600080fd5b6100b16100ac36600461089a565b61015d565b005b6100b16100c136600461089a565b6101c6565b6100b16100d4366004610862565b6102a3565b6100b16100e7366004610823565b61032e565b6100b1610358565b6100fc61036c565b604051610109919061090d565b60405180910390f35b6100fc61037b565b6100fc61038a565b6100fc610399565b6100b1610138366004610823565b6103a8565b61015061014b366004610823565b6103e2565b6040516101099190610a41565b610165610790565b6001600160a01b03821660009081526001602052604090819020549051600080516020610bef833981519152916101a2918591908590819061093a565b60405180910390a16001600160a01b03909116600090815260016020526040902055565b6101ce610790565b6000826001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561020957600080fd5b505afa15801561021d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102419190610846565b6001600160a01b03811660009081526001602052604090819020549051919250600080516020610bef833981519152916102809184918690819061093a565b60405180910390a16001600160a01b031660009081526001602052604090205550565b6102ab610790565b6001600160a01b0382166102da5760405162461bcd60e51b81526004016102d190610a10565b60405180910390fd5b6001600160a01b0381166103005760405162461bcd60e51b81526004016102d1906109a6565b600280546001600160a01b039384166001600160a01b03199182161790915560038054929093169116179055565b610336610790565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b610360610790565b61036a60006107cf565b565b6004546001600160a01b031681565b6000546001600160a01b031690565b6003546001600160a01b031681565b6002546001600160a01b031681565b6103b0610790565b6001600160a01b0381166103d65760405162461bcd60e51b81526004016102d190610960565b6103df816107cf565b50565b600080826001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561041e57600080fd5b505afa158015610432573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104569190610846565b6003546040516315d8472b60e21b815291925060009182916001600160a01b0316906357611cac90610490908690611c2090600401610921565b60206040518083038186803b1580156104a857600080fd5b505afa9250505080156104d8575060408051601f3d908101601f191682019092526104d5918101906108c5565b60015b61052f573d808015610506576040519150601f19603f3d011682016040523d82523d6000602084013e61050b565b606091505b50506004546001600160a01b0316600090815260016020526040902054915061053b565b6001600160701b031691505b6004546001600160a01b03848116911614156105f8576006836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561058c57600080fd5b505afa1580156105a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c491906108ec565b6105cf906024610ba0565b6105d99190610ba0565b6105e490600a610ab0565b6105ee9083610b81565b935050505061078b565b6002546040516315d8472b60e21b81526001600160a01b03909116906357611cac9061062c908690611c2090600401610921565b60206040518083038186803b15801561064457600080fd5b505afa925050508015610674575060408051601f3d908101601f19168201909252610671918101906108c5565b60015b61077a573d8080156106a2576040519150601f19603f3d011682016040523d82523d6000602084013e6106a7565b606091505b5069d3c21bcecceda1000000846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156106ec57600080fd5b505afa158015610700573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072491906108ec565b61072f906024610ba0565b61073a90600a610ab0565b6001600160a01b03861660009081526001602052604090205461075e908690610b81565b6107689190610b81565b6107729190610a4a565b915050610786565b6001600160701b031690505b925050505b919050565b61079861081f565b6001600160a01b03166107a961037b565b6001600160a01b03161461036a5760405162461bcd60e51b81526004016102d1906109db565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b3390565b600060208284031215610834578081fd5b813561083f81610bd9565b9392505050565b600060208284031215610857578081fd5b815161083f81610bd9565b60008060408385031215610874578081fd5b823561087f81610bd9565b9150602083013561088f81610bd9565b809150509250929050565b600080604083850312156108ac578182fd5b82356108b781610bd9565b946020939093013593505050565b6000602082840312156108d6578081fd5b81516001600160701b038116811461083f578182fd5b6000602082840312156108fd578081fd5b815160ff8116811461083f578182fd5b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0394909416845260208401929092526040830152606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f757364506567676564416767726567617465642061646472206e6f7420736574604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601790820152761059d9dc9959d85d1959081859191c881b9bdd081cd95d604a1b604082015260600190565b90815260200190565b600082610a6557634e487b7160e01b81526012600452602481fd5b500490565b80825b6001808611610a7c5750610aa7565b818704821115610a8e57610a8e610bc3565b80861615610a9b57918102915b9490941c938002610a6d565b94509492505050565b600061083f60001960ff851684600082610acc5750600161083f565b81610ad95750600061083f565b8160018114610aef5760028114610af957610b26565b600191505061083f565b60ff841115610b0a57610b0a610bc3565b6001841b915084821115610b2057610b20610bc3565b5061083f565b5060208310610133831016604e8410600b8410161715610b59575081810a83811115610b5457610b54610bc3565b61083f565b610b668484846001610a6a565b808604821115610b7857610b78610bc3565b02949350505050565b6000816000190483118215151615610b9b57610b9b610bc3565b500290565b600060ff821660ff841680821015610bba57610bba610bc3565b90039392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146103df57600080fdfedd71a1d19fcba687442a1d5c58578f1e409af71a79d10fd95a4d66efd8fa9ae7a26469706673582212200432ec4b596e5474066f4a6dbc8312aa9bef483d69a574822c4e30b8424a844964736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getUnderlyingPrice(address)": {
        "params": {
          "cToken": "The cToken to get the underlying price of"
        },
        "returns": {
          "_0": "The price of the asset in USD as an unsigned integer scaled up by 10 ^ (36 - underlying asset decimals). E.g. WBTC has 8 decimal places, so the return value is scaled up by 1e28."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setDirectPrice(address,uint256)": {
        "params": {
          "asset": "The address of the asset",
          "price": "The price to set the asset to: If WEVMOS, set the price with 6 decimals, otherwise use 18 decimals but denominate the price in WEVMOS"
        }
      },
      "setUnderlyingPrice(address,uint256)": {
        "params": {
          "cToken": "The address of the cToken",
          "price": "The price to set the asset to: If WEVMOS, set the price with 6 decimals, otherwise use 18 decimals but denominate the price in WEVMOS"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getUnderlyingPrice(address)": {
        "notice": "Get the underlying price of a cToken asset"
      },
      "setDirectPrice(address,uint256)": {
        "notice": "set the price of an asset"
      },
      "setUnderlyingPrice(address,uint256)": {
        "notice": "set the price of the underlying asset of the ctoken"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/PriceOracle/AdrastiaPriceOracle.sol:AdrastiaPriceOracle",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1071,
        "contract": "contracts/PriceOracle/AdrastiaPriceOracle.sol:AdrastiaPriceOracle",
        "label": "backupPrices",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1094,
        "contract": "contracts/PriceOracle/AdrastiaPriceOracle.sol:AdrastiaPriceOracle",
        "label": "aggregatedOracle",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 1097,
        "contract": "contracts/PriceOracle/AdrastiaPriceOracle.sol:AdrastiaPriceOracle",
        "label": "usdPeggedAggregatedOracle",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 1100,
        "contract": "contracts/PriceOracle/AdrastiaPriceOracle.sol:AdrastiaPriceOracle",
        "label": "WEVMOS",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}